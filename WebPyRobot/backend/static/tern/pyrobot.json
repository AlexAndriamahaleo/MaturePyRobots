{
  "!name": "pyrobot",
  "self": {
    "getEnemyTankId()": {
      "!type": "fn() -> int",
      "!doc": "Renvoie l'ID du tank ennemie."
    },
    "getTankId()": {
      "!type": "fn() -> int",
      "!doc": "Renvoie l'ID de votre tank."
    },
    "getCellDistance(NumCell1, NumCell2)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître la distance entre la cellule NumCell1 et la cellule NumCell2."
    },
    "getCellFromXY(X, Y)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître le numéro d'une cellule à partir d'une coordonnée X et Y."
    },
    "getCellPosY(NumCell)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître l'ordonnée Y d'une cellule NumCell."
    },
    "getCellPosX(NumCell)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître l'ordonnée X d'une cellule NumCell."
    },
    "getPosition(TankID)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître le numéro de la cellule sur laquelle se trouve le tank qui a pour identifiant TankID."
    },
    "getRange(TankId)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître la portée du tank d'identifiant TankID."
    },
    "getPA(TankID)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître le nombre de Point d'Action actuel (ou restant) du tank d'identifiant TankID."
    },
    "getPM(TankID)": {
      "!type": "fn() -> int",
      "!doc": "Permet de connaître le nombre de Point de Mouvement actuel (ou restant) du tank d'identifiant TankID."
    },
    "moveTank(NumCell)": {
      "!type": "fn() -> int",
      "!doc": "Fonction permettant de déplacer son tank vers une cellule NumCell. Si celle-ci n'est pas à sa portée (par rapport aux nombres de PM), le tank se déplace vers une cellule proche de celle désiré."
    },
    "shoot()": {
      "!type": "fn() -> void",
      "!doc": "Fonction permettant de tirer sur le tank ennemi."
    },
    "getLife(TankID)": {
      "!type": "fn() -> void",
      "!doc": "Permet de connaître la vie restante du tank qui a pour identifiant TankID"
    }
  },
  "while": {
    "!type": "fn()",
    "!doc": "contrôler le flux du programme",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "as": {
    "!type": "fn()",
    "!doc": "(doc à venir)",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "for": {
    "!type": "fn()",
    "!doc": "parcourir les éléments d'une collection dans l'ordre d'apparition",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "in": {
    "!type": "fn()",
    "!doc": "(doc à venir)",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "break": {
    "!type": "fn()",
    "!doc": "interrompre la boucle, si nécessaire",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "if": {
    "!type": "fn()",
    "!doc": "utilisé pour déterminer, quelles instructions vont être exécutées",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "elif": {
    "!type": "fn()",
    "!doc": "signifie else if. Si le premier test est évalué à Faux, alors il continue avec le suivant",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "else": {
    "!type": "fn()",
    "!doc": "est optionnel. L'instruction après le mot clé else est exécutée, sauf si la condition est True",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "is": {
    "!type": "fn()",
    "!doc": "tests pour l'identité de l'objet",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "not": {
    "!type": "fn()",
    "!doc": "nie une valeur booléenne",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "and": {
    "!type": "fn()",
    "!doc": "toutes les conditions dans une expression booléenne doivent être satisfaites",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "or": {
    "!type": "fn()",
    "!doc": "au moins une condition doit être remplie",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "def": {
    "!type": "fn()",
    "!doc": "utilisé pour créer une nouvelle fonction définie par l'utilisateur",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "return": {
    "!type": "fn()",
    "!doc": "quitte la fonction et renvoie une valeur",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "global": {
    "!type": "fn()",
    "!doc": "accès aux variables définies en dehors des fonctions",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "try": {
    "!type": "fn()",
    "!doc": "spécifie les gestionnaires d'exceptions",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "except": {
    "!type": "fn()",
    "!doc": "attrape l'exception et exécute les codes",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "pass": {
    "!type": "fn()",
    "!doc": "ne fait rien",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "abs()": {
    "!type": "fn()",
    "!doc": "Renvoie la valeur absolue d'un nombre.",
    "!url": "https://docs.python.org/fr/3/index.html"
  },
  "range()": {
    "!type": "fn()",
    "!doc": "itérer sur une suite de nombres",
    "!url": "https://docs.python.org/fr/3/index.html"
  }
}